{"version":3,"sources":["ui/reducers/common.reducer.js","ui/actions/common.actions.js","ui/services/socket.js","ui/config.js","ui/services/index.js","ui/components/GameOver/GameOver.js","ui/components/App/App.js","ui/store.js","serviceWorker.js","index.js","ui/assets/images/logo.svg"],"names":["CommonTypes","SHOW_PRELOADER","concat","HIDE_PRELOADER","SET_PLAYER","SET_POINTS","SET_TEAMS","SET_GAME_OVER","initialState","isShowPreloader","player","points","teams","isGameOver","CommonActions","showPreloader","type","hidePreloader","setPlayer","setPoints","setTeams","setGameOver","callApi","Object","defineProperty","RSAA","endpoint","method","types","socket","io","services","emit","Promise","res","rej","on","timestamp","GameOver","props","react_default","a","createElement","className","onClick","click","movement","up","down","left","right","movementTmp","getSocket","App","this","setState","interval","undefined","game","ctx","width","height","playerTmp","_this","_this$props","document","addEventListener","event","code","objectSpread","JSON","parse","localStorage","getItem","id","getId","name","faker","firstName","team","Number","Math","random","window","innerWidth","innerHeight","getElementById","scale","devicePixelRatio","getContext","style","player_","setItem","stringify","gameState","room","field","draw","players","bases","btoa","Date","getTime","toString","replace","clearRect","strokeStyle","strokeRect","x","y","i","length","fillStyle","beginPath","arc","r","PI","fill","font","fillText","substr","life","isAlive","roomName","clearRoom","startGame","_this2","_this$props2","src","logo","alt","state","map","indexTeam","key","colSpan","members","member","indexMember","components_GameOver_GameOver","restartGame","Component","connect","common","dispatch","bindActionCreators","rootReducer","combineReducers","arguments","action","createStore","composeWithDevTools","applyMiddleware","thunk","apiMiddleware","Boolean","location","hostname","match","ReactDOM","render","es","store","BrowserRouter","Route","path","component","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.293a0161.chunk.js","sourcesContent":["const name = 'COMMON';\nexport const CommonTypes = {\n  SHOW_PRELOADER: `${name}:SHOW_PRELOADER`,\n  HIDE_PRELOADER: `${name}:HIDE_PRELOADER`,\n  SET_PLAYER: `${name}:SET_PLAYER`,\n  SET_POINTS: `${name}:SET_POINTS`,\n  SET_TEAMS: `${name}:SET_TEAMS`,\n  SET_GAME_OVER: `${name}:SET_GAME_OVER`\n};\n\nconst initialState = {\n  isShowPreloader: false,\n  player: {},\n  points: 0,\n  teams: [],\n  isGameOver: false\n};\n\nexport const CommonReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CommonTypes.SHOW_PRELOADER: {\n      return {\n        ...state,\n        isShowPreloader: true\n      };\n    }\n\n    case CommonTypes.HIDE_PRELOADER: {\n      return {\n        ...state,\n        isShowPreloader: false\n      };\n    }\n\n    case CommonTypes.SET_PLAYER: {\n      return {\n        ...state,\n        player: action.player\n      };\n    }\n\n    case CommonTypes.SET_POINTS: {\n      return {\n        ...state,\n        points: action.points\n      };\n    }\n\n    case CommonTypes.SET_TEAMS: {\n      return {\n        ...state,\n        teams: action.teams\n      };\n    }\n\n    case CommonTypes.SET_GAME_OVER: {\n      return {\n        ...state,\n        isGameOver: action.isGameOver\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n","import { RSAA } from 'redux-api-middleware';\nimport { CommonTypes } from '../reducers';\n\nexport const CommonActions = {\n  showPreloader: () => ({type: CommonTypes.SHOW_PRELOADER}),\n  hidePreloader: () => ({type: CommonTypes.HIDE_PRELOADER}),\n  setPlayer: (player) => ({type: CommonTypes.SET_PLAYER, player: player}),\n  setPoints: (points) => ({type: CommonTypes.SET_POINTS, points: points}),\n  setTeams: (teams) => ({type: CommonTypes.SET_TEAMS, teams: teams}),\n  setGameOver: (isGameOver) => ({type: CommonTypes.SET_GAME_OVER, isGameOver}),\n  callApi: () => ({\n    [RSAA]: {\n      endpoint: '',\n      method: 'GET',\n      types: ['REQUEST', 'SUCCESS', 'FAILURE']\n    }\n  })\n};\n","import io from 'socket.io-client';\nimport config from '../config';\n\nconst socket = io(config.server);\n\nclass Socket {\n  start() {\n    socket.emit('subscribeToTimer', 1000);\n    return new Promise((res, rej) => {\n      socket.on('timer', timestamp => res(timestamp));\n    });\n  }\n\n  getSocket() {\n    return socket;\n  }\n}\n\nexport default new Socket();\n","export default {\n  server: 'http://local.online:3000'\n};\n","import socket from './socket';\n\nexport default {\n  socket\n};\n","import React from 'react';\nimport './GameOver.scss';\n\nconst GameOver = (props) => (\n  <div className=\"game-over\">\n    Game Over\n\n    <hr/>\n\n    <span className=\"btn btn-outline-primary\" onClick={() => props.click()}>Restart game</span>\n  </div>\n);\n\nexport default GameOver;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport * as faker from 'faker';\nimport logo from '../../assets/images/logo.svg';\nimport './App.scss';\nimport { CommonActions } from '../../actions';\nimport services from '../../services';\nimport GameOver from '../GameOver/GameOver';\n\nlet movement = {\n  up: false,\n  down: false,\n  left: false,\n  right: false\n};\nconst movementTmp = {\n  up: false,\n  down: false,\n  left: false,\n  right: false\n};\nconst socket = services.socket.getSocket();\n// let player;\n\nclass App extends Component {\n  componentWillMount() {\n    this.props.showPreloader();\n\n    this.setState({\n      timestamp: 0,\n      player: {},\n      points: 0\n    });\n\n    this.interval = undefined;\n    this.game = undefined;\n    this.ctx = undefined;\n    this.width = 0;\n    this.height = 0;\n    this.player = undefined;\n    this.playerTmp = undefined;\n\n    // services.socket\n    //   .start()\n    //   .then(timestamp => this.setState({timestamp}))\n    //   .catch(err => console.error(err));\n  }\n\n  componentDidMount() {\n    this.props.hidePreloader();\n    const { setPlayer, setPoints, setTeams, setGameOver } = this.props;\n\n    document.addEventListener('keydown', (event) => {\n      switch (event.code) {\n        case 'KeyA': // A\n          movementTmp.left = true;\n          break;\n        case 'KeyW': // W\n          movementTmp.up = true;\n          break;\n        case 'KeyD': // D\n          movementTmp.right = true;\n          break;\n        case 'KeyS': // S\n          movementTmp.down = true;\n          break;\n      }\n\n      if (\n        movement.left === movementTmp.left &&\n        movement.up === movementTmp.up &&\n        movement.right === movementTmp.right &&\n        movement.down === movementTmp.down\n      ) {\n        return;\n      }\n\n      movement = {...movementTmp};\n\n      // this.interval = setInterval(() => socket.emit('movement', {...movement, id: this.player.id}), 1000 / 60);\n      socket.emit('movement', {...movement, player: player});\n    });\n\n    document.addEventListener('keyup', (event) => {\n      switch (event.code) {\n        case 'KeyA': // A\n          movementTmp.left = false;\n          break;\n        case 'KeyW': // W\n          movementTmp.up = false;\n          break;\n        case 'KeyD': // D\n          movementTmp.right = false;\n          break;\n        case 'KeyS': // S\n          movementTmp.down = false;\n          break;\n      }\n\n      if (\n        movement.left === movementTmp.left &&\n        movement.up === movementTmp.up &&\n        movement.right === movementTmp.right &&\n        movement.down === movementTmp.down\n      ) {\n        return;\n      }\n\n      movement = {...movementTmp};\n\n      socket.emit('movement', {...movement, player: player});\n\n      // if (!movement.left && !movement.up && !movement.right && !movement.down) {\n      //   clearInterval(this.interval);\n      //   socket.emit('movement', {...movement, id: this.player.id});\n      // }\n    });\n\n    const player = JSON.parse(localStorage.getItem('player')) || {\n      id: this.getId(),\n      name: faker.name.firstName(),\n      type: 'user',\n      team: Number(Math.random() > 0.5)\n    };\n\n    setPlayer(player);\n    socket.emit('new player', player);\n\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n\n    this.game = document.getElementById('game');\n    const scale = window.devicePixelRatio;\n\n    this.ctx = this.game.getContext('2d');\n    this.game.style.width = this.width + 'px';\n    this.game.style.height = this.height + 'px';\n\n    this.game.width = this.width * scale;\n    this.game.height = this.height * scale;\n\n    this.ctx.scale(scale, scale);\n\n    socket.on('new player confirm', player_ => {\n      // console.log('player', player_, this.props.player);\n\n      if (player_.id === this.props.player.id) {\n        localStorage.setItem('player', JSON.stringify(player_));\n        setPlayer(player_);\n        setPoints(player_.points);\n      }\n    });\n\n    socket.on('state', gameState => {\n      // console.log('state', gameState);\n      // this.setState({field: gameState.field});\n      if (!gameState || !gameState.room || !gameState.field) {\n        return;\n      }\n\n      setTeams(gameState.room.teams);\n      this.draw(gameState.players, gameState.field, gameState.bases);\n    });\n\n    socket.on('game over', room => {\n      // console.log('state', gameState);\n      // this.setState({field: gameState.field});\n      if (!room) {\n        return;\n      }\n\n      setTeams(room.teams);\n      setGameOver(true);\n      // this.draw(gameState.players, gameState.field, gameState.bases);\n    });\n  }\n\n  getId() {\n    return btoa(new Date().getTime().toString()).replace(/=/g, '');\n  }\n\n  draw(players, field, bases) {\n    this.ctx.clearRect(0, 0, this.width, this.height);\n\n    this.ctx.strokeStyle = '#FF0000';\n    this.ctx.strokeRect(field.x, field.y, field.width, field.height);\n\n    for (let i = 0; i < bases.length; i++) {\n      this.ctx.fillStyle = bases[i].team === 1\n          ? 'darkred'\n          : 'darkblue';\n      this.ctx.beginPath();\n      this.ctx.arc(bases[i].x, bases[i].y, bases[i].r, 0, 2 * Math.PI);\n      this.ctx.fill();\n      this.ctx.font = '10px Arial';\n      this.ctx.fillText(\n        bases[i].name.substr(0, 10) + ': ' + bases[i].life,\n        bases[i].x - 20,\n        bases[i].team === 1 ? bases[i].y + 34 : bases[i].y - 24\n      );\n    }\n\n    for (let i = 0; i < players.length; i++) {\n      this.playerTmp = players[i];\n\n      if (!this.playerTmp.isAlive) {\n        continue;\n      }\n\n      this.ctx.fillStyle = this.playerTmp.type === 'bot'\n        ? this.playerTmp.team === 1\n          ? 'darkred'\n          : 'darkblue'\n        : this.playerTmp.team === 1\n          ? 'red'\n          : 'blue';\n      this.ctx.beginPath();\n      this.ctx.arc(this.playerTmp.x, this.playerTmp.y, this.playerTmp.r, 0, 2 * Math.PI);\n      this.ctx.fill();\n      this.ctx.font = '10px Arial';\n      this.ctx.fillText(\n        this.playerTmp.name.substr(0, 10) + ': ' + this.playerTmp.life,\n        this.playerTmp.x - 12,\n        this.playerTmp.y - 12\n      );\n    }\n  }\n\n  clearRoom() {\n    socket.emit('clear room', 'some room');\n  }\n\n  startGame() {\n    socket.emit('start game', {roomName: 'some room', player: this.props.player});\n  }\n\n  restartGame() {\n    this.clearRoom();\n    this.startGame();\n    this.props.setGameOver(false);\n  }\n\n  render() {\n    const { isShowPreloader, player, points, teams, isGameOver } = this.props;\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n            <div>Score: {points}</div>\n            <div>Timestamp: {this.state.timestamp}</div>\n            <span className=\"btn btn-outline-primary\" onClick={() => this.clearRoom()}>Clear room</span>\n            <span className=\"btn btn-outline-primary\" onClick={() => this.startGame()}>Start game</span>\n\n            {isShowPreloader ? <div>Loading...</div> : <div>Content</div>}\n\n            <canvas id=\"game\" />\n\n            <div className=\"leaderboard row\">\n              {teams && teams.map((team, indexTeam) => (\n                <div key={'team-' + indexTeam} className=\"col\">\n                  <table className={'table table-sm text-light ' + (indexTeam === 1 ? 'bg-danger' : 'bg-primary')}>\n                    <thead>\n                    <tr>\n                      <th colSpan=\"3\">{team.name}</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {team.members.map((member, indexMember) => (\n                      <tr key={'member-' + indexTeam + '-' + indexMember} className={player.id === member.id ? 'table-active' : ''}>\n                        <td width=\"40\">\n                          {!member.isAlive ? <span className=\"icon-skeletor\" /> : <span>&nbsp;</span>}\n                        </td>\n                        <td className=\"member-name\">{member.name}</td>\n                        <td className=\"member-points\">{member.points}</td>\n                      </tr>\n                    ))}\n                    </tbody>\n                  </table>\n                </div>\n              ))}\n            </div>\n\n            {isGameOver ? <GameOver click={() => this.restartGame()} /> : null}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  isShowPreloader: PropTypes.bool,\n  player: PropTypes.object,\n  points: PropTypes.number,\n  teams: PropTypes.array,\n  isGameOver: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isShowPreloader: state.common.isShowPreloader,\n  player: state.common.player,\n  points: state.common.points,\n  teams: state.common.teams,\n  isGameOver: state.common.isGameOver\n});\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  ...CommonActions\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { apiMiddleware } from 'redux-api-middleware';\nimport { CommonReducer } from './reducers';\n\nconst rootReducer = combineReducers({\n  common: CommonReducer\n});\n\nexport default createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk, apiMiddleware)));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { App } from './ui/components';\nimport store from './ui/store';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/scss/bootstrap.scss';\nimport './ui/assets/styles/style.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <Route path=\"/\" component={App} />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}